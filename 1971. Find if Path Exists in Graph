https://leetcode.com/problems/find-if-path-exists-in-graph/description/

Time: O(V+E)
Space: O(V+E)

class Solution {
    public boolean validPath(int n, int[][] edges, int source, int destination) {
        Map<Integer, List<Integer>> graph = new HashMap<>();
        Stack<Integer> stack = new Stack<>();
        for (int[] edge : edges) {
            int a = edge[0];
            int b = edge[1];
            graph.computeIfAbsent(a, val -> new ArrayList<>()).add(b);
            graph.computeIfAbsent(b, val -> new ArrayList<>()).add(a);
        }

        boolean[] seen = new boolean[n];
        seen[source] = true;
        stack.push(source);

        while(!stack.isEmpty()) {
            int curr = stack.pop();
            if (curr == destination) {
                return true;
            }
            for (int next : graph.get(curr)) {
                if (!seen[next]) {
                    seen[next] = true;
                    stack.push(next);
                }
                
            }
        }

        return false;
    }
}
